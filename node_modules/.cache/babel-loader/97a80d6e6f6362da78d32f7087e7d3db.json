{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/satyabrat/React_Projects/PluralSight_Prac/Conference_Site/src/SignMeUp.js\";\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { ConfigContext } from \"./App\";\n\nvar SignMeUp = function SignMeUp(_ref) {\n  var _React$createElement;\n\n  var signupCallback = _ref.signupCallback;\n  useEffect(function () {\n    console.log(\"SignMeUp:useEffect called\");\n  });\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailValid = _useState4[0],\n      setEmailValid = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sendProcessing = _useState6[0],\n      setSendProcessing = _useState6[1];\n\n  var context = useContext(ConfigContext);\n\n  function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  var notify = function notify() {\n    toast.info(\"You will be notified of upcoming events \".concat(email));\n  };\n\n  function sendEmailToBackend() {\n    setSendProcessing(true);\n    new _Promise(function (resolve) {\n      setTimeout(function () {\n        setSendProcessing(false);\n        setEmail(\"\");\n        resolve();\n      }, 1000);\n    }).then(function () {\n      notify();\n      signupCallback(email);\n      setEmail(\"\");\n    });\n  }\n\n  var buttonText = sendProcessing ? \"processing...\" : \"Get Updates\"; //console.log(\"src/SignMeUp called\");\n\n  return context.showSignMeUp === false ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", (_React$createElement = {\n    value: email,\n    onChange: function onChange(e) {\n      setEmailValid(validateEmail(e.target.value));\n      return setEmail(e.target.value);\n    },\n    placeholder: \"Enter Email\",\n    type: \"email\",\n    name: \"email\",\n    required: true\n  }, _defineProperty(_React$createElement, \"required\", true), _defineProperty(_React$createElement, \"__self\", _this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }), _React$createElement)), \"\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !emailValid || sendProcessing,\n    className: \"btn\",\n    onClick: sendEmailToBackend,\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, buttonText))));\n};\n\nexport default SignMeUp;","map":{"version":3,"sources":["/Users/satyabrat/React_Projects/PluralSight_Prac/Conference_Site/src/SignMeUp.js"],"names":["React","useState","useEffect","useContext","ToastContainer","toast","ConfigContext","SignMeUp","signupCallback","console","log","email","setEmail","emailValid","setEmailValid","sendProcessing","setSendProcessing","context","validateEmail","re","test","notify","info","sendEmailToBackend","resolve","setTimeout","then","buttonText","showSignMeUp","e","target","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,uCAAP;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAwB;AAAA;;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AACvCN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,OAAO,CAACC,GAAR;AACD,GAFQ,CAAT;;AADuC,kBAKbT,QAAQ,EALK;AAAA;AAAA,MAKhCU,KALgC;AAAA,MAKzBC,QALyB;;AAAA,mBAMHX,QAAQ,CAAC,KAAD,CANL;AAAA;AAAA,MAMhCY,UANgC;AAAA,MAMpBC,aANoB;;AAAA,mBAOKb,QAAQ,CAAC,KAAD,CAPb;AAAA;AAAA,MAOhCc,cAPgC;AAAA,MAOhBC,iBAPgB;;AASvC,MAAMC,OAAO,GAAGd,UAAU,CAACG,aAAD,CAA1B;;AAEA,WAASY,aAAT,CAAuBP,KAAvB,EAA8B;AAC5B,QAAMQ,EAAE,GAAG,2JAAX;AACA,WAAOA,EAAE,CAACC,IAAH,CAAQT,KAAR,CAAP;AACD;;AAED,MAAMU,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBhB,IAAAA,KAAK,CAACiB,IAAN,mDAAsDX,KAAtD;AACD,GAFD;;AAIA,WAASY,kBAAT,GAA8B;AAC5BP,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,iBAAY,UAASQ,OAAT,EAAkB;AAC5BC,MAAAA,UAAU,CAAC,YAAW;AACpBT,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAJ,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAY,QAAAA,OAAO;AACR,OAJS,EAIP,IAJO,CAAV;AAKD,KAND,EAMGE,IANH,CAMQ,YAAM;AACZL,MAAAA,MAAM;AACNb,MAAAA,cAAc,CAACG,KAAD,CAAd;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAVD;AAWD;;AAED,MAAMe,UAAU,GAAGZ,cAAc,GAAG,eAAH,GAAqB,aAAtD,CAnCuC,CAqCvC;;AAEA,SAAOE,OAAO,CAACW,YAAR,KAAyB,KAAzB,GAAiC,IAAjC,gBACL;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEjB,KADT;AAEE,IAAA,QAAQ,EAAE,kBAACkB,CAAD,EAAO;AACff,MAAAA,aAAa,CAACI,aAAa,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CAAb;AACA,aAAOnB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,KALH;AAME,IAAA,WAAW,EAAC,aANd;AAOE,IAAA,IAAI,EAAC,OAPP;AAQE,IAAA,IAAI,EAAC,OARP;AASE,IAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,4BADF,uBAcE;AACE,IAAA,QAAQ,EAAE,CAAClB,UAAD,IAAeE,cAD3B;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAEQ,kBAHX;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGI,UANH,CAdF,CAFF,CADF,CADF;AA8BD,CArED;;AAuEA,eAAepB,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { ConfigContext } from \"./App\";\n\nconst SignMeUp = ({ signupCallback }) => {\n  useEffect(() => {\n    console.log(`SignMeUp:useEffect called`);\n  });\n\n  const [email, setEmail] = useState();\n  const [emailValid, setEmailValid] = useState(false);\n  const [sendProcessing, setSendProcessing] = useState(false);\n\n  const context = useContext(ConfigContext);\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  const notify = () => {\n    toast.info(`You will be notified of upcoming events ${email}`);\n  };\n\n  function sendEmailToBackend() {\n    setSendProcessing(true);\n    new Promise(function(resolve) {\n      setTimeout(function() {\n        setSendProcessing(false);\n        setEmail(\"\");\n        resolve();\n      }, 1000);\n    }).then(() => {\n      notify();\n      signupCallback(email);\n      setEmail(\"\");\n    });\n  }\n\n  const buttonText = sendProcessing ? \"processing...\" : \"Get Updates\";\n\n  //console.log(\"src/SignMeUp called\");\n\n  return context.showSignMeUp === false ? null : (\n    <div className=\"container\">\n      <div>\n        <ToastContainer />\n        <div className=\"content\">\n          <input\n            value={email}\n            onChange={(e) => {\n              setEmailValid(validateEmail(e.target.value));\n              return setEmail(e.target.value);\n            }}\n            placeholder=\"Enter Email\"\n            type=\"email\"\n            name=\"email\"\n            required\n            required\n          />\n          &nbsp;\n          <button\n            disabled={!emailValid || sendProcessing}\n            className=\"btn\"\n            onClick={sendEmailToBackend}\n            type=\"submit\"\n          >\n            {buttonText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignMeUp;\n"]},"metadata":{},"sourceType":"module"}