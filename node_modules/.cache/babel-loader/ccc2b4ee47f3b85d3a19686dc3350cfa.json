{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar useEmailValidation = function useEmailValidation(secondsFormValidFor) {\n  var validateEmail = function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      emailValid = _useState2[0],\n      setEmailValid = _useState2[1];\n\n  var reducer = function reducer(state, action) {\n    state = action;\n    setEmailValid(validateEmail(state));\n    return action;\n  };\n\n  var _useReducer = useReducer(reducer, \"\"),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      email = _useReducer2[0],\n      setEmail = _useReducer2[1];\n\n  var _useState3 = useState(secondsFormValidFor),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  useInterval(function () {\n    setCount(count - 1);\n  }, count > 0 ? 1000 : null);\n  return {\n    count: count,\n    email: email,\n    setEmail: setEmail,\n    emailValid: emailValid\n  };\n};\n\nexport default useEmailValidation;","map":{"version":3,"sources":["/Users/satyabrat/React_Projects/PluralSight_Prac/Conference_Site/src/useEmailValidation.js"],"names":["useEmailValidation","secondsFormValidFor","validateEmail","email","re","test","useState","emailValid","setEmailValid","reducer","state","action","useReducer","setEmail","count","setCount","useInterval"],"mappings":";;AAAA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,mBAAD,EAAyB;AAClD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,QAAMC,EAAE,GAAG,2JAAX;AACA,WAAOA,EAAE,CAACC,IAAH,CAAQF,KAAR,CAAP;AACD,GAHD;;AADkD,kBAKdG,QAAQ,CAAC,KAAD,CALM;AAAA;AAAA,MAK3CC,UAL2C;AAAA,MAK/BC,aAL+B;;AAMlD,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjCD,IAAAA,KAAK,GAAGC,MAAR;AACAH,IAAAA,aAAa,CAACN,aAAa,CAACQ,KAAD,CAAd,CAAb;AACA,WAAOC,MAAP;AACD,GAJD;;AANkD,oBAWxBC,UAAU,CAACH,OAAD,EAAU,EAAV,CAXc;AAAA;AAAA,MAW3CN,KAX2C;AAAA,MAWpCU,QAXoC;;AAAA,mBAYxBP,QAAQ,CAACL,mBAAD,CAZgB;AAAA;AAAA,MAY3Ca,KAZ2C;AAAA,MAYpCC,QAZoC;;AAalDC,EAAAA,WAAW,CACT,YAAM;AACJD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAHQ,EAITA,KAAK,GAAG,CAAR,GAAY,IAAZ,GAAmB,IAJV,CAAX;AAMA,SAAO;AAAEA,IAAAA,KAAK,EAALA,KAAF;AAASX,IAAAA,KAAK,EAALA,KAAT;AAAgBU,IAAAA,QAAQ,EAARA,QAAhB;AAA0BN,IAAAA,UAAU,EAAVA;AAA1B,GAAP;AACD,CApBD;;AAsBA,eAAeP,kBAAf","sourcesContent":["const useEmailValidation = (secondsFormValidFor) => {\n  const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n  const [emailValid, setEmailValid] = useState(false);\n  const reducer = (state, action) => {\n    state = action;\n    setEmailValid(validateEmail(state));\n    return action;\n  };\n  const [email, setEmail] = useReducer(reducer, \"\");\n  const [count, setCount] = useState(secondsFormValidFor);\n  useInterval(\n    () => {\n      setCount(count - 1);\n    },\n    count > 0 ? 1000 : null\n  );\n  return { count, email, setEmail, emailValid };\n};\n\nexport default useEmailValidation;\n"]},"metadata":{},"sourceType":"module"}